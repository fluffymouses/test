# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ft65M7jefDJkvt0he6-cW_C8Fhlh9YgE
"""

from flask import Flask, request, jsonify, g
import sqlite3
from datetime import datetime

app = Flask(__name__)
DATABASE = 'reviews.db'
#слов может быть куда больше
POSITIVE_WORDS = ["хорош", "люблю", "отличн", "супер"]
NEGATIVE_WORDS = ["плохо", "ненавиж", "ужас", "отстой"]

def get_db():
    if 'db' not in g:
        g.db = sqlite3.connect(DATABASE)
        g.db.row_factory = sqlite3.Row
    return g.db

@app.teardown_appcontext
def close_db(error):
    db = g.pop('db', None)
    if db is not None:
        db.close()

def init_db():
    db = get_db()
    db.execute('''CREATE TABLE IF NOT EXISTS reviews (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        text TEXT NOT NULL,
        sentiment TEXT NOT NULL,
        created_at TEXT NOT NULL
    )''')
    db.commit()

def analyze_sentiment(text):
    lower = text.lower()
    if any(word in lower for word in POSITIVE_WORDS):
        return "positive"
    if any(word in lower for word in NEGATIVE_WORDS):
        return "negative"
    return "neutral"

@app.route('/reviews', methods=['POST'])
def create_review():
    data = request.get_json()
    text = data.get('text', '').strip()
    if not text:
        return jsonify({"error": "Text is required"}), 400

    sentiment = analyze_sentiment(text)
    created_at = datetime.utcnow().isoformat()
    db = get_db()
    cursor = db.execute(
        'INSERT INTO reviews (text, sentiment, created_at) VALUES (?, ?, ?)',
        (text, sentiment, created_at)
    )
    db.commit()

    return jsonify({
        "id": cursor.lastrowid,
        "text": text,
        "sentiment": sentiment,
        "created_at": created_at
    }), 201

@app.route('/reviews', methods=['GET'])
def get_reviews():
    sentiment = request.args.get('sentiment')
    db = get_db()
    if sentiment:
        rows = db.execute(
            'SELECT * FROM reviews WHERE sentiment = ?', (sentiment,)
        ).fetchall()
    else:
        rows = db.execute('SELECT * FROM reviews').fetchall()

    return jsonify([dict(row) for row in rows])

if __name__ == '__main__':
    with app.app_context():
        init_db()
    app.run(debug=True)  # или host='0.0.0.0', port=5000

